<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="lecture">

	<!-- 학생이 수강중인 강의 리스트 조회 -->
	<select id="stu_list" resultType="vo.LectureVO">
		select l.*, t.timetable_name
		from lecture l left outer join timetable t                       
		on l.timetable_code = t.timetable_code
		where lecture_code in(select lecture_code 
		                        from enrolment
		                        where member_code = #{member_code})
	</select>
	
	<!-- 강사가 교육중인 강의 리스트 조회 -->
	<select id="teach_list" resultType="vo.LectureVO">
		select l.* ,t.timetable_name, (select count(*)from enrolment e where e.lecture_code= l.lecture_code) student_cnt
		from lecture l left outer join timetable t
		on l.timetable_code = t.timetable_code
		where teacher_code = #{teacher_code}
	</select>
	
	<!-- 선택한 강의의 선생 정보 -->
	<select id="teacher_info" resultType="vo.MemberVO">
		select *
		from member
		where member_code = (select teacher_code
		                    from lecture
		                    where lecture_code = #{lecture_code})
	</select>
	
	<!-- 선택한 강의의 공지사항 조회 -->
	<select id="lecture_notice" resultType="vo.LectureBoardVO">
		select *
		from board
		where lecture_code = #{lecture_code}
		and category = 'no'
	</select>
	
	<!-- 선택한 강의의 수강생 리스트 조회 -->
	<select id="student_list" resultType="vo.MemberVO">
		select m.*, lecture_code
		from member m left outer join enrolment e on m.member_code=e.member_code
		where e.lecture_code = #{lecture_code}
	</select>
	
	<!-- 수강생선택 -> 선택한 학생의 출결 -->
	<select id="student_attendance" resultType="vo.AttendanceVO" parameterType="Map">
		select 
			count(*) as total,
		    count(case when state='OK' then 1 end) as ok,
		    count(case when state='NO' then 1 end) as no,
		    count(case when state='HF' then 1 end) as hf
		from attendance
		where lecture_code = #{lecture_code}
		and member_code = #{member_code}
	</select>
	
	<!-- 강의선택-과제 -->
	<select id="lecture_homework" resultType="vo.HomeworkVO">
		select *
		from homework
		where lecture_code = #{lecture_code}
	</select>
	
	<!-- 과제 제출자-미제출자 수 -->
	<select id="homework_subcnt" resultType="vo.HomeworkSubmitVO">
		select
		    count(case when state=1 then 1 end) subcnt,
		    count(case when state=0 then 1 end) notcnt
		from homework_submit
		where homework_code = #{homework_code}
	</select>
	
	
	<!-- 수강생선택-> 선택한 학생의 과제제출 상태 -->
	<select id="student_homework" resultType="vo.HomeworkVO">
		select h.*, s.member_code student_code, s.state 
		from homework h left outer join homework_submit s
		on h.homework_code = s.homework_code
		where s.member_code = #{member_code}
		and lecture_code = #{lecture_code}
	</select>
	
	<!-- 수강생 선택-> 선택한 학생의 출결일 보기 -->
	<select id="student_attendance_detail" resultType="vo.AttendanceVO" parameterType="Map">
		select a.* , TO_CHAR(attendance_time, 'day') week
		from attendance a
		where lecture_code = #{lecture_code}
		and member_code = #{member_code}
		and attendance_time between TO_DATE(#{start}, 'yymmdd') and TO_DATE(#{end}, 'yymmdd')
	</select>
	
	<!-- 강의선택->학생선택->시험성적 조회 -->
	<select id="student_exam" resultType="vo.ExamVO" parameterType="Map">
		select *
		from exam  left outer join exam_take 
		using (exam_code)
		where lecture_code = #{lecture_code}
		and member_code = #{member_code}
	</select>
<<<<<<< HEAD
<<<<<<< HEAD
	
	<!-- 회원 상세정보 조회 -->
	<select id="member_info" resultType="vo.MemberVO">
	    select *
	    from member
	    where member_code = #{member_code}
	</select>
=======
>>>>>>> main
=======
>>>>>>> main
</mapper>