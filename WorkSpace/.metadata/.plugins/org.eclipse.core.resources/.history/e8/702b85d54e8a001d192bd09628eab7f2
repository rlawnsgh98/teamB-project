<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board">
<!-- 방명록 댓글 삭제 -->
<delete id="commentDelete">
delete from board_comment where id = #{id}
</delete>
<!-- 방명록 댓글 변경저장 -->
<update id ='commentUpdate'>
update board_comment set content = #{content} where id = #{id}
</update>
<!-- 방명록 댓글목록 조회 -->
<select id='commentList' resultType='board.BoardCommentVO'>
select c.*, name 
from board_comment c left outer join member m on m.userid = c.writer 
where board_id= #{board_id}
order by c.id desc
</select>

<!-- 방명록 댓글 저장 -->
<insert id='commentInsert'>
insert into board_comment ( content, writer, board_id )
values ( #{content}, #{writer}, #{board_id} )
</insert>

<!-- 방명록 첨부파일 정보 삭제 -->
<delete id='fileDelete'>
	delete from board_file where id in (${removed})
</delete>

<!-- 방명록 정보 변경저장 -->
<update id='update'>
update board set title = #{title}, content = #{content}
where id = #{id}
</update>

<!-- 방명록 정보 삭제 -->
<delete id='delete'>
	delete from board where id = #{id}
</delete>

<!-- 방명록 각 첨부파일정보 조회 -->
<select id="fineInfo" resultType="board.BoardFileVO">
	select * from board_file where id = #{id}
</select>

<!-- 방명록 첨부파일저장 -->
<insert id="fileInsert">
	<foreach item="item"  collection="fileList"
        open="insert all" separator=" " close="select * from dual">
        into board_file( board_id, filename, filepath )
		values ( #{id}, #{item.filename}, #{item.filepath} )
    </foreach>
</insert>

<!-- 방명록 새글저장 -->
<insert id='insert'>
<selectKey keyProperty="id" resultType="integer" order="AFTER">
	select seq_board.currval from dual 
</selectKey>
insert into board ( title, content, writer )
values ( #{title}, #{content}, #{writer} )
</insert>

<sql id='word'>like '%' || #{keyword} || '%'</sql>
<sql id='board_where'>
	<choose>
		<when test="search=='all'">
		where title <include refid="word"/>
		or  content <include refid="word"/>
		or   writer in (select userid from member where name <include refid="word"/> )
		</when>
		<when test="search=='title' or search=='content'">
		where ${search} <include refid="word"/>
		</when>
		<when test="search=='writer'">
		where writer in (select userid from member where name <include refid="word"/> )
		</when>
	</choose>
</sql>

<!-- 선택한 방명록 글의 조회수증가처리 -->
<update id='read'>
	update board set readcnt = readcnt + 1  where id = #{id}
</update>

<!-- 선택한 방명록 글의 파일정보 조회 -->
<select id='file' resultType="board.BoardFileVO">
	select * from board_file where board_id = #{id}
</select>

<!-- 선택한 방명록 글의 정보 조회 -->
<select id='info' resultType='board.BoardVO'>
	select b.*, name 
	from board b left outer join member m on b.writer = m.userid  
	where id =#{id}
</select>

<!-- 방명록 글의 총건수 조회 -->
<select id='total' resultType='integer'>
select count(*) from board <include refid="board_where"/>
</select>

<!-- 선택한 페이지의 글 10건 조회 -->
<select id='list' resultType='board.BoardVO'>
select (select count(*) from board_file f where b.id = f.board_id) fileCount, b.* 
from ( select row_number() over(order by id) no, name, b.* 
	   from board b left outer join member m on b.writer = m.userid
	   <include refid="board_where"/> ) b
where no between ${beginList} and ${endList}	   
order by no desc
</select>
</mapper>