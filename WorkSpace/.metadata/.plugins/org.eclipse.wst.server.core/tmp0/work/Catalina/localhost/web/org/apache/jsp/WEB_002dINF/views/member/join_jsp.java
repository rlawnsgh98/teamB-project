/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.65
 * Generated at: 2023-01-26 00:58:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class join_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/D:/teamB-project/WorkSpace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/web/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1669102095569L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>join</title>\r\n");
      out.write("<link href=\"css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\"\r\n");
      out.write("	href=\"css/member.css?");
      out.print(new java.util.Date());
      out.write("\">\r\n");
      out.write("	\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"//code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<h1 class=\"d-none\">홈-회원서비스-회원가입</h1>\r\n");
      out.write("	<div id=\"container\">\r\n");
      out.write("		<div class=\"main_wrap\">\r\n");
      out.write("			<div class=\"content_body\">\r\n");
      out.write("				<div class=\"join_box\">\r\n");
      out.write("					<div class=\"join_box_title\">\r\n");
      out.write("						<h3>회원가입</h3>\r\n");
      out.write("						<span class=\"must\">*필수 항목입니다.</span>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"tb_box\">\r\n");
      out.write("						<form method='post' action='join' enctype='multipart/form-data'>\r\n");
      out.write("							<table class=\"join_table\">\r\n");
      out.write("								<colgroup>\r\n");
      out.write("									<col style=\"width: 14%\">\r\n");
      out.write("									<col>\r\n");
      out.write("								</colgroup>\r\n");
      out.write("								<tbody>\r\n");
      out.write("									<tr>\r\n");
      out.write("										<th class=\"tb_th\"><label for=\"type\" class=\"join_required\">회원\r\n");
      out.write("												구분<span class=\"must\">*</span>\r\n");
      out.write("										</label></th>\r\n");
      out.write("										<td><label><input type=\"radio\" name=\"type\"\r\n");
      out.write("												value=\"STUD\" checked=\"checked\">학생</label> &nbsp; <label><input\r\n");
      out.write("												type=\"radio\" name=\"type\" value=\"TEACH\">강사</label></td>\r\n");
      out.write("									</tr>\r\n");
      out.write("									<tr>\r\n");
      out.write("										<th class=\"tb_th\"><label for=\"login_id\"\r\n");
      out.write("											class=\"join_required\">아이디<span class=\"must\">*</span></label>\r\n");
      out.write("										</th>\r\n");
      out.write("										<td><input type='text' name='id' class='chk w200'>\r\n");
      out.write("											<a class=\"btn btn-dark text-white\" id=\"id_ck\">중복확인</a>\r\n");
      out.write("											<div class='valid'>아이디를 입력하세요(영문소문자,숫자만)</div></td>\r\n");
      out.write("									</tr>\r\n");
      out.write("									<tr>\r\n");
      out.write("										<th class=\"tb_th\"><label for=\"password\"\r\n");
      out.write("											class=\"join_required\">비밀번호<span class=\"must\">*</span></label>\r\n");
      out.write("										</th>\r\n");
      out.write("										<td><input type='password' name='password'\r\n");
      out.write("											class='chk w200'>\r\n");
      out.write("											<div class='valid'>비밀번호를 입력하세요(영문대/소문자,숫자 모두 포함)</div></td>\r\n");
      out.write("									</tr>\r\n");
      out.write("									<tr>\r\n");
      out.write("										<th class=\"tb_th\"><label for=\"password_ck\"\r\n");
      out.write("											class=\"join_required chk\">비밀번호 확인<span class=\"must\">*</span></label>\r\n");
      out.write("										</th>\r\n");
      out.write("										<td><input type='password' name='password_ck'\r\n");
      out.write("											class='chk w200'>\r\n");
      out.write("											<div class='valid'>비밀번호를 다시 입력하세요</div></td>\r\n");
      out.write("									</tr>\r\n");
      out.write("									<tr>\r\n");
      out.write("										<th class=\"tb_th\"><label for=\"member_name\"\r\n");
      out.write("											class=\"join_required\">이름<span class=\"must\">*</span></label></th>\r\n");
      out.write("										<td><input type=\"text\" name=\"member_name\" class=\"w200\">\r\n");
      out.write("										</td>\r\n");
      out.write("									</tr>\r\n");
      out.write("									<tr>\r\n");
      out.write("										<th class=\"tb_th\"><label for=\"gender\"\r\n");
      out.write("											class=\"join_required\">성별<span class=\"must\">*</span></label></th>\r\n");
      out.write("										<td><label><input type=\"radio\" name=\"gender\"\r\n");
      out.write("												value=\"남\" checked=\"checked\">남</label> &nbsp; <label><input\r\n");
      out.write("												type=\"radio\" name=\"gender\" value=\"여\">여</label></td>\r\n");
      out.write("									</tr>\r\n");
      out.write("									<tr>\r\n");
      out.write("										<th class=\"tb_th\"><label for=\"email\"\r\n");
      out.write("											class=\"join_required chk\">이메일<span class=\"must\">*</span></label></th>\r\n");
      out.write("										<td><div style=\"float: left;\">\r\n");
      out.write("												<input type='text' name='email' class='chk w200'>\r\n");
      out.write("												<div class='valid'>이메일을 입력하세요</div>\r\n");
      out.write("											</div></td>\r\n");
      out.write("									</tr>\r\n");
      out.write("									<tr>\r\n");
      out.write("										<th class=\"tb_th\"><label for=\"birth\"\r\n");
      out.write("											class=\"join_required\">생년월일</label></th>\r\n");
      out.write("										<td><input type='text' name='birth' class='date' readonly>\r\n");
      out.write("											<a id='delete' style=\"display: none;\"><i\r\n");
      out.write("												class=\"font-r fa-regular fa-calendar-xmark\"></i></a></td>\r\n");
      out.write("									</tr>\r\n");
      out.write("									<tr>\r\n");
      out.write("										<th class=\"tb_th\"><label for=\"phone\"\r\n");
      out.write("											class=\"join_required\">전화번호</label></th>\r\n");
      out.write("										<td><input type='text' name='phone' maxlength=\"13\">\r\n");
      out.write("										</td>\r\n");
      out.write("									</tr>\r\n");
      out.write("									<tr>\r\n");
      out.write("										<th class=\"tb_th\"><label for=\"post\" class=\"join_required\">주소</label></th>\r\n");
      out.write("										<td><input type=\"button\" id=\"post\" class=\"button gray\"\r\n");
      out.write("											value=\"우편번호찾기\"> <input type='text' name='post'\r\n");
      out.write("											class='w-px60 input_post' readonly> <input\r\n");
      out.write("											type='text' name='address' class='full' readonly> <input\r\n");
      out.write("											type='text' name='address' class='full'></td>\r\n");
      out.write("									</tr>\r\n");
      out.write("									<tr>\r\n");
      out.write("										<th class=\"tb_th\"><label for=\"profilepath\"\r\n");
      out.write("											class=\"join_required\">프로필 이미지</label></th>\r\n");
      out.write("										<td>\r\n");
      out.write("											<div class='align'>\r\n");
      out.write("												<label> <input type='file' id='attach-file'\r\n");
      out.write("													style=\"border: none; padding: 0\" accept=\"image/*\"\r\n");
      out.write("													name='profilepath' class=\"w200\">\r\n");
      out.write("												</label> <span id='preview'></span> <a id='delete-file'><i\r\n");
      out.write("													class=\"font-r fa-solid fa-trash-can\"></i></a>\r\n");
      out.write("											</div>\r\n");
      out.write("										</td>\r\n");
      out.write("									</tr>\r\n");
      out.write("								</tbody>\r\n");
      out.write("							</table>\r\n");
      out.write("							<div class=\"board_btn\">\r\n");
      out.write("								<a href=\"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\"\r\n");
      out.write("									class=\"btn btn-white text-dark border-dark\">취소</a> <a\r\n");
      out.write("									href=\"join.me\" class=\"btn btn-dark text-white\">확인</a>\r\n");
      out.write("							</div>\r\n");
      out.write("						</form>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<script src='js/member.js?");
      out.print(new java.util.Date());
      out.write("'></script>\r\n");
      out.write("	<script src='js/common.js?");
      out.print(new java.util.Date());
      out.write("'></script>\r\n");
      out.write("	<script src=\"https://code.jquery.com/ui/1.13.2/jquery-ui.js\"></script>\r\n");
      out.write("	\r\n");
      out.write("	<script\r\n");
      out.write("		src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("		\r\n");
      out.write("	<script\r\n");
      out.write("		src=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/js/all.min.js\"></script>\r\n");
      out.write("		\r\n");
      out.write("	<script>\r\n");
      out.write("		$('.join').click(function() {\r\n");
      out.write("			if ($.trim($('[name=member_name]').val()) == '') {\r\n");
      out.write("				alert('이름을 입력하세요');\r\n");
      out.write("				$('[name=member_name]').focus();\r\n");
      out.write("				$('[name=member_name]').val('');\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			//유효성확인\r\n");
      out.write("			//중복확인 했고 이미사용중인 경우 가입불가\r\n");
      out.write("			//중복확인하지 않은경우 가입불가\r\n");
      out.write("			var _id = $('[name=id]');\r\n");
      out.write("			if (_id.hasClass('chked')) {\r\n");
      out.write("				if (_id.siblings('div').hasClass('invalid')) {\r\n");
      out.write("					alert('회원가입 불가!\\n' + member.id.unUsable.desc);\r\n");
      out.write("					_id.focus();\r\n");
      out.write("					return;\r\n");
      out.write("				}\r\n");
      out.write("\r\n");
      out.write("			} else {\r\n");
      out.write("				//유효하지 않게 입력해서 회원가입불가\r\n");
      out.write("				if (tagIsInvalid(_id))\r\n");
      out.write("					return;\r\n");
      out.write("				else {\r\n");
      out.write("					//중복확인하지 않아서 회원가입불가			\r\n");
      out.write("					alert('회원가입 불가!\\n' + member.id.valid.desc);\r\n");
      out.write("					_id.focus();\r\n");
      out.write("					return;\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("			if (tagIsInvalid($('[name=password]')))\r\n");
      out.write("				return;\r\n");
      out.write("			if (tagIsInvalid($('[name=password_ck]')))\r\n");
      out.write("				return;\r\n");
      out.write("			$('form').submit();\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("		//유효성확인\r\n");
      out.write("		function tagIsInvalid(tag) {\r\n");
      out.write("			var status = member.tag_status(tag);\r\n");
      out.write("			if (status.code == 'invalid') {\r\n");
      out.write("				alert('회원가입 불가!\\n' + status.desc);\r\n");
      out.write("				tag.focus();\r\n");
      out.write("				return true;\r\n");
      out.write("			} else\r\n");
      out.write("				return false;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		//아이디 중복확인\r\n");
      out.write("		$('#id_ck').click(function() {\r\n");
      out.write("			idCheck();\r\n");
      out.write("		});\r\n");
      out.write("		function idCheck() {\r\n");
      out.write("			var $id = $('[name=id]');\r\n");
      out.write("			//이미 중복확인했다면 재확인 불필요\r\n");
      out.write("			if ($id.hasClass('chked'))\r\n");
      out.write("				return;\r\n");
      out.write("\r\n");
      out.write("			var status = member.tag_status($id);\r\n");
      out.write("			if (status.code == 'invalid') {\r\n");
      out.write("				alert('아이디 중복확인 불필요!\\n' + status.desc);\r\n");
      out.write("				$id.focus();\r\n");
      out.write("			} else {\r\n");
      out.write("				$.ajax({\r\n");
      out.write("					url : 'idCheck',\r\n");
      out.write("					data : {\r\n");
      out.write("						id : $id.val()\r\n");
      out.write("					},\r\n");
      out.write("					success : function(response) {\r\n");
      out.write("						//false: 아이디 존재X, true: 아이디 존재\r\n");
      out.write("						status = response ? member.id.unUsable\r\n");
      out.write("								: member.id.usable;\r\n");
      out.write("						$id.siblings('div').text(status.desc).removeClass()\r\n");
      out.write("								.addClass(status.code);\r\n");
      out.write("						//중복확인완료지정\r\n");
      out.write("						$id.addClass('chked');\r\n");
      out.write("					},\r\n");
      out.write("					error : function(req, text) {\r\n");
      out.write("						alert(text + ':' + req.status);\r\n");
      out.write("					}\r\n");
      out.write("				});\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		$('.chk').keyup(\r\n");
      out.write("				function(e) {\r\n");
      out.write("					if ($(this).attr('name') == 'id' && e.keyCode == 13) { //아이디에서 Enter시 중복확인처리\r\n");
      out.write("						idCheck();\r\n");
      out.write("					} else {\r\n");
      out.write("						$(this).removeClass('chked');\r\n");
      out.write("						var status = member.tag_status($(this));\r\n");
      out.write("						$(this).siblings('div').text(status.desc).removeClass()\r\n");
      out.write("								.addClass(status.code);\r\n");
      out.write("					}\r\n");
      out.write("				});\r\n");
      out.write("\r\n");
      out.write("		//날짜변경시 날짜삭제 버튼 나오게\r\n");
      out.write("		$('.date').change(function() {\r\n");
      out.write("			$(this).next().css('display', 'inline');\r\n");
      out.write("		});\r\n");
      out.write("		//날짜삭제 버튼 클릭시 날짜없애고, 날짜삭제 버튼도 안나오게\r\n");
      out.write("		$('#delete').click(function() {\r\n");
      out.write("			$(this).css('display', 'none');\r\n");
      out.write("			$(this).siblings('.date').val('');\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("		//생년월일 특정날짜(만8세)까지만 선택가능하도록 제한\r\n");
      out.write("		var today = new Date();\r\n");
      out.write("		var endDay = new Date(today.getFullYear() - 8, today.getMonth(), today\r\n");
      out.write("				.getDate() - 1);\r\n");
      out.write("		var range = today.getFullYear() - 80 + ':' + endDay.getFullYear();\r\n");
      out.write("		$('.date').datepicker({\r\n");
      out.write("			yearRange : range,\r\n");
      out.write("			maxDate : endDay,\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("		$('#post')\r\n");
      out.write("				.click(\r\n");
      out.write("						function() {\r\n");
      out.write("							//다음 우편번호찾기 api로 우편번호와 기본주소를 조회해온다.\r\n");
      out.write("							new daum.Postcode(\r\n");
      out.write("									{\r\n");
      out.write("										oncomplete : function(data) {\r\n");
      out.write("											console.log(data)\r\n");
      out.write("											$('[name=post]').val(data.zonecode);\r\n");
      out.write("											var address = data.userSelectedType == 'R' ? data.roadAddress\r\n");
      out.write("													: data.jibunAddress;\r\n");
      out.write("											if (data.buildingName != '')\r\n");
      out.write("												address += ' ('\r\n");
      out.write("														+ data.buildingName\r\n");
      out.write("														+ ')';\r\n");
      out.write("											$('[name=address]').eq(0).val(\r\n");
      out.write("													address);\r\n");
      out.write("										}\r\n");
      out.write("									}).open();\r\n");
      out.write("						});\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f0_reused = false;
    try {
      _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f0.setParent(null);
      // /WEB-INF/views/member/join.jsp(125,17) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f0.setValue("/");
      int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
      if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      _jspx_th_c_005furl_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f0, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f0_reused);
    }
    return false;
  }
}
