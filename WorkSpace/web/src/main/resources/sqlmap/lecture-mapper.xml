<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="lecture">

	<select id="list" resultType="vo.LectureVO">
		select l.*, member_name teacher_name
		from lecture l left outer join member m 
		on l.teacher_code = m.member_code
		where lecture_code in(select lecture_code 
		                        from enrolment
		                        where member_code = #{member_code})
	</select>
	
	<!-- 선택한 강의의 강의정보, 강사정보 -->
	<select id="info" resultType="vo.MemberVO">
		select  l.* ,m.*
		from member m left outer join lecture l
		on m.member_code = l.teacher_code
		where lecture_code = #{lecture_code} 
	</select>
	
	<!-- 선택한 강의의 공지사항 리스트 -->
	<select id="notice_list" resultType="vo.BoardVO">
		select rownum, b.*
		from (select b.*, m.member_name
		        from board b left outer join member m
		        on b.writer = m.member_code
				where lecture_code = #{lecture_code}  and category = 'no' 
				order by writedate  desc) b
	</select>
	
	<!-- 강의 공지사항 정보 -->
	<select id="notice_info" resultType="vo.BoardVO">
		select b.*, m.member_name
		from board b left outer join member m
		on b.writer = m.member_code
		where board_code = #{board_code}
	</select>
	
	<select id="homework_list" resultType="vo.HomeworkVO">
		select rownum, h.*
		from(select h.homework_code, title, content, writedate, duedate, filename, filepath, lecture_code, h.member_code teacher_code, s.member_code , s.state 
		    from homework h left outer join homework_submit s
		    on h.homework_code = s.homework_code
		    where s.member_code = #{member_code}
		    and lecture_code = #{lecture_code}
		    order by writedate desc) h
	</select>
	
	<select id="homework_info" resultType="vo.HomeworkVO">
		select h.homework_code, title, content, writedate, duedate, filename, filepath, lecture_code, h.member_code teacher_code, s.member_code , s.state ,submitdate, member_name
	    from homework h left outer join homework_submit s
	    on h.homework_code = s.homework_code
	    left outer join member m
   		on s.member_code = m.member_code
	    where s.member_code = #{member_code}
	    and h.homework_code=#{homework_code}
	</select>
	
	<select id="video_list" resultType="vo.BoardVO">
	select rownum, vi.*
    from(select *
		    from board
		    where category = 'vi'
		    and lecture_code= #{lecture_code}
		    order by writedate desc) vi
	</select>
	
	<select id="exam_list" resultType="vo.ExamVO" parameterType="map">
		select rownum, e.*
		from(select *
		    from exam  left outer join exam_take 
		    using (exam_code)
		    where lecture_code = #{lecture_code}
		    and member_code = #{member_code}
		    order by startdate desc) e
	</select>
	
<!-- 로그인한 강사의 개설 강의 목록 조회-kmj -->
<select id="te_lec_list" resultType="vo.LectureVO">
select l.lecture_code, l.lecture_name
, l.startdate, l.enddate, l.room_code, m.member_name teacher_name
, l.subject_code, l.timetable_code
from lecture l, member m
where l.teacher_code = m.member_code
and teacher_code = (select member_code 
from member 
where type='TEACH'
and member_code = #{member_code})
<if test='select_subject!=null'>
and subject_code like '%'|| #{select_subject, jdbcType=VARCHAR}||'%'
</if>
<if test='select_year!=null'>
and  to_char(startdate,'yyyy') like '%'|| #{select_year, jdbcType=VARCHAR} ||'%'   
</if>
order by 1
</select>

<!-- 로그인한 강사가 강의 개설-kmj -->
<insert id="open_new_lecture">
insert into lecture(lecture_code, lecture_name, teacher_code, 
startdate, enddate, room_code, subject_code, timetable_code)
values(SEQ_LECTURE.nextval, #{lecture_name}, #{teacher_code}, 
#{startdate}, #{enddate}, #{room_code},#{subject_code},#{timetable_code})
</insert>

<!-- 로그인한 강사가 개설 강의 수정-kmj -->
<update id="modify_lecture">
update lecture
set startdate = #{startdate}
, enddate = #{enddate}
, room_code = #{room_code}
, timetable_code = #{timetable_code}
, subject_code = #{subject_code}
, lecture_name = #{lecture_name}
where teacher_code = #{teacher_code}
and lecture_code = #{lecture_code}
</update>

<!-- 로그인한 강사가 개설 강의 수정할 때 강의코드 목록 필요-kmj -->
<select id="lecture_code_list" resultType="vo.LectureVO">
select lecture_code 
from lecture
where teacher_code = #{teacher_code}
order by lecture_code
</select>

<!-- 로그인한 강사가 개설 강의 삭제-kmj -->
<delete id="delete_lecture">
delete from lecture where lecture_code = #{lecture_code}
</delete>

<!-- sysdate에 해당 하는 강의 목록 조회-kmj -->
<select id="sys_lec_list" resultType="vo.LectureVO">
select l.*,m.member_name, s.subject_name
from lecture l, member m, subject s
where l.teacher_code = m.member_code
and l.subject_code = s.subject_code
and sysdate &gt; startdate
and sysdate &lt; enddate
order by 1
</select>
</mapper>