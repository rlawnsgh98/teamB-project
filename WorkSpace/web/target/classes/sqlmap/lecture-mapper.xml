<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="lecture">

	<!-- 특정 강의조회 -->
	<select id="lecture_info" resultType='vo.LectureVO'>
	select l.*, member_name teacher_name 
	from lecture l inner join member m
	on l.teacher_code = m.member_code
	where lecture_code = #{lecture_code}
	</select>

	<!-- 시험 등록처리 -->
	<insert id="insert_exam">
	insert into exam (lecture_code, exam_type, subject, exam_title, startdate, duedate)
	values ( #{lecture_code}, #{exam_type}, #{subject}, #{exam_title}, #{startdate}, #{duedate} )
	<selectKey keyProperty="exam_code" resultType="integer" order="AFTER">
			select seq_exam.currval from dual
	</selectKey>
	</insert>
	
	<!-- 시험 등록시 수강생들의 exam_take 데이터 생성 -->
	<insert id="insert_exam_take">
	<foreach item="item" collection="List"
        open="insert all " separator=" " close="select * from dual">
          into exam_take(exam_code, filename, filepath)
		  values( #{id}, #{item.filename}, #{item.filepath} )
   	</foreach>
	</insert>

	<!-- 강의 목록 조회 - 강사 -->
	<select id="lecture_list_teacher" resultType='vo.LectureVO'>
	select l.* ,t.timetable_name, (select count(*)
									from enrolment e 
									where e.lecture_code= l.lecture_code) student_cnt
	from lecture l left outer join timetable t
	on l.timetable_code = t.timetable_code
	where teacher_code = #{member_code}
	</select>

	<select id="list" resultType="vo.LectureVO">
	select l.*, member_name teacher_name
	from lecture l left outer join member m 
	on l.teacher_code = m.member_code
	where lecture_code in(select lecture_code 
	                        from enrolment
	                        where member_code = #{member_code})
	</select>
	
	<!-- 선택한 강의의 강의정보, 강사정보 -->
	<select id="info" resultType="vo.MemberVO">
		select  l.* ,m.*, t.timetable_name
		from member m left outer join lecture l
		on m.member_code = l.teacher_code
        left outer join timetable t
        on l.timetable_code = t.timetable_code
		where lecture_code = #{lecture_code} 
	</select>
	
	<!-- 선택한 강의의 공지사항 리스트 -->
	<select id="notice_list" resultType="vo.BoardVO">
		select rownum, b.*
		from (select b.*, m.member_name
		        from board b left outer join member m
		        on b.writer = m.member_code
				where lecture_code = #{lecture_code}  and category = 'no' 
				order by writedate  desc) b
	</select>
	
	<!-- 강의 공지사항 정보 -->
	<select id="notice_info" resultType="vo.BoardVO">
		select b.*, m.member_name
		from board b left outer join member m
		on b.writer = m.member_code
		where board_code = #{board_code}
	</select>
	
	<select id="homework_list" resultType="vo.HomeworkVO">
		select rownum, h.*
		from(select h.homework_code, title, h.content, writedate, duedate, h.filename, h.filepath, lecture_code, h.member_code teacher_code, s.member_code , s.state 
		    from homework h left outer join homework_submit s
		    on h.homework_code = s.homework_code
		    where s.member_code = #{member_code}
		    and lecture_code = #{lecture_code}
		    order by writedate desc) h
	</select>
	
	<select id="homework_info" resultType="vo.HomeworkVO">
		select h.homework_code, h.title, h.content, h.writedate, h.duedate, h.filename, h.filepath, h.lecture_code, h.member_code teacher_code, s.member_code , s.state ,s.submitdate, m.member_name
	    from homework h left outer join homework_submit s
	    on h.homework_code = s.homework_code
	    left outer join member m
   		on s.member_code = m.member_code
	    where s.member_code = #{member_code}
	    and h.homework_code=#{homework_code}
	</select>
	
	<select id="video_list" resultType="vo.BoardVO">
	select rownum, vi.*
    from(select *
		    from board
		    where category = 'vi'
		    and lecture_code= #{lecture_code}
		    order by writedate desc) vi
	</select>
	
	<!-- 학생이 시험목록 조회 -->
	<select id="exam_list" resultType="vo.ExamVO" parameterType="map">
		select rownum, e.*
		from(select *
		    from exam  left outer join exam_take 
		    using (exam_code)
		    where lecture_code = #{lecture_code}
		    and member_code = #{member_code}
		    order by startdate desc) e
	</select>
	
	<!-- 강사가 시험목록 조회 - 응시한 학생 수 컬럼 추가 -->
	<select id="exam_list_teacher" resultType="vo.ExamVO">
	select  rownum, ex.*, n.*
	from    exam ex left outer join (select  e.exam_code exam_code, count(e.exam_code) num
                                from    member m left outer join exam_take e
                                on      m.member_code = e.member_code
                                inner join exam exam
                                on      e.exam_code = exam.exam_code
                                where   exam.lecture_code = 1
                                and		exam.exam_code = 1001
                                and     e.state is not null
                                group by e.exam_code
                                ) n
        	on  ex.exam_code = n.exam_code
	where   lecture_code = 1
	</select>
	
	<!-- 특정 시험 문제 목록 조회 -->
	<select id="question_list" resultType='vo.QuestionVO'>
	select * from exam_question where exam_code = #{exam_code}
	</select>
	<!-- 특정 시험 정보 조회 -->
	<select id="exam_info" resultType='vo.ExamVO'>
	select * from exam where exam_code = #{exam_code}
	</select>
	
	<!-- 특정 시험 총 인원수 조회 -->
	<select id="exam_total_num" resultType='integer'>
	select  count(*)
	from    lecture l left join enrolment e
	on      l.lecture_code = e.lecture_code
	where   status = 1
	and     l.lecture_code = #{lecture_code}
	</select>
	
	
	<select id="student_list" resultType="vo.MemberVO">
		select m.*, lecture_code
		from member m left outer join enrolment e on m.member_code=e.member_code
		where e.lecture_code = #{lecture_code}
	</select>
</mapper>