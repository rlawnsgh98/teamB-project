// Generated by view binder compiler. Do not edit!
package com.example.teamb_project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.teamb_project.R;
import com.google.android.exoplayer2.ui.PlayerView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityVideoDetailBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView ivBack;

  @NonNull
  public final TextView tvContent;

  @NonNull
  public final TextView tvReadcnt;

  @NonNull
  public final TextView tvTitle;

  @NonNull
  public final TextView tvWritedate;

  @NonNull
  public final TextView tvWriter;

  @NonNull
  public final PlayerView videoView;

  private ActivityVideoDetailBinding(@NonNull LinearLayout rootView, @NonNull ImageView ivBack,
      @NonNull TextView tvContent, @NonNull TextView tvReadcnt, @NonNull TextView tvTitle,
      @NonNull TextView tvWritedate, @NonNull TextView tvWriter, @NonNull PlayerView videoView) {
    this.rootView = rootView;
    this.ivBack = ivBack;
    this.tvContent = tvContent;
    this.tvReadcnt = tvReadcnt;
    this.tvTitle = tvTitle;
    this.tvWritedate = tvWritedate;
    this.tvWriter = tvWriter;
    this.videoView = videoView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityVideoDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityVideoDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_video_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityVideoDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iv_back;
      ImageView ivBack = ViewBindings.findChildViewById(rootView, id);
      if (ivBack == null) {
        break missingId;
      }

      id = R.id.tv_content;
      TextView tvContent = ViewBindings.findChildViewById(rootView, id);
      if (tvContent == null) {
        break missingId;
      }

      id = R.id.tv_readcnt;
      TextView tvReadcnt = ViewBindings.findChildViewById(rootView, id);
      if (tvReadcnt == null) {
        break missingId;
      }

      id = R.id.tv_title;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      id = R.id.tv_writedate;
      TextView tvWritedate = ViewBindings.findChildViewById(rootView, id);
      if (tvWritedate == null) {
        break missingId;
      }

      id = R.id.tv_writer;
      TextView tvWriter = ViewBindings.findChildViewById(rootView, id);
      if (tvWriter == null) {
        break missingId;
      }

      id = R.id.video_view;
      PlayerView videoView = ViewBindings.findChildViewById(rootView, id);
      if (videoView == null) {
        break missingId;
      }

      return new ActivityVideoDetailBinding((LinearLayout) rootView, ivBack, tvContent, tvReadcnt,
          tvTitle, tvWritedate, tvWriter, videoView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
