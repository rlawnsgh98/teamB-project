// Generated by view binder compiler. Do not edit!
package com.example.teamb_project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.teamb_project.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemLectureNoticeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView ivDropDown;

  @NonNull
  public final LinearLayout linDetail;

  @NonNull
  public final LinearLayout linViewDetail;

  @NonNull
  public final TextView tvNoticeContent;

  @NonNull
  public final TextView tvNoticeTitle;

  @NonNull
  public final TextView tvNoticeWritedate;

  private ItemLectureNoticeBinding(@NonNull LinearLayout rootView, @NonNull ImageView ivDropDown,
      @NonNull LinearLayout linDetail, @NonNull LinearLayout linViewDetail,
      @NonNull TextView tvNoticeContent, @NonNull TextView tvNoticeTitle,
      @NonNull TextView tvNoticeWritedate) {
    this.rootView = rootView;
    this.ivDropDown = ivDropDown;
    this.linDetail = linDetail;
    this.linViewDetail = linViewDetail;
    this.tvNoticeContent = tvNoticeContent;
    this.tvNoticeTitle = tvNoticeTitle;
    this.tvNoticeWritedate = tvNoticeWritedate;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemLectureNoticeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemLectureNoticeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_lecture_notice, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemLectureNoticeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iv_drop_down;
      ImageView ivDropDown = ViewBindings.findChildViewById(rootView, id);
      if (ivDropDown == null) {
        break missingId;
      }

      id = R.id.lin_detail;
      LinearLayout linDetail = ViewBindings.findChildViewById(rootView, id);
      if (linDetail == null) {
        break missingId;
      }

      id = R.id.lin_view_detail;
      LinearLayout linViewDetail = ViewBindings.findChildViewById(rootView, id);
      if (linViewDetail == null) {
        break missingId;
      }

      id = R.id.tv_notice_content;
      TextView tvNoticeContent = ViewBindings.findChildViewById(rootView, id);
      if (tvNoticeContent == null) {
        break missingId;
      }

      id = R.id.tv_notice_title;
      TextView tvNoticeTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvNoticeTitle == null) {
        break missingId;
      }

      id = R.id.tv_notice_writedate;
      TextView tvNoticeWritedate = ViewBindings.findChildViewById(rootView, id);
      if (tvNoticeWritedate == null) {
        break missingId;
      }

      return new ItemLectureNoticeBinding((LinearLayout) rootView, ivDropDown, linDetail,
          linViewDetail, tvNoticeContent, tvNoticeTitle, tvNoticeWritedate);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
