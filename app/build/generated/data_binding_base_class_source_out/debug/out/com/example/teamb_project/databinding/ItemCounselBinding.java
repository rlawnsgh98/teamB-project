// Generated by view binder compiler. Do not edit!
package com.example.teamb_project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.teamb_project.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemCounselBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView ivMore;

  @NonNull
  public final ImageView ivProfile;

  @NonNull
  public final LinearLayout linCounsel;

  @NonNull
  public final LinearLayout linMore;

  @NonNull
  public final TextView name;

  @NonNull
  public final RelativeLayout relTitle;

  @NonNull
  public final TextView tvDelete;

  @NonNull
  public final TextView tvTitle;

  @NonNull
  public final TextView tvWriteDate;

  @NonNull
  public final View vState;

  private ItemCounselBinding(@NonNull LinearLayout rootView, @NonNull ImageView ivMore,
      @NonNull ImageView ivProfile, @NonNull LinearLayout linCounsel, @NonNull LinearLayout linMore,
      @NonNull TextView name, @NonNull RelativeLayout relTitle, @NonNull TextView tvDelete,
      @NonNull TextView tvTitle, @NonNull TextView tvWriteDate, @NonNull View vState) {
    this.rootView = rootView;
    this.ivMore = ivMore;
    this.ivProfile = ivProfile;
    this.linCounsel = linCounsel;
    this.linMore = linMore;
    this.name = name;
    this.relTitle = relTitle;
    this.tvDelete = tvDelete;
    this.tvTitle = tvTitle;
    this.tvWriteDate = tvWriteDate;
    this.vState = vState;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemCounselBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemCounselBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_counsel, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemCounselBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iv_more;
      ImageView ivMore = ViewBindings.findChildViewById(rootView, id);
      if (ivMore == null) {
        break missingId;
      }

      id = R.id.iv_profile;
      ImageView ivProfile = ViewBindings.findChildViewById(rootView, id);
      if (ivProfile == null) {
        break missingId;
      }

      id = R.id.lin_counsel;
      LinearLayout linCounsel = ViewBindings.findChildViewById(rootView, id);
      if (linCounsel == null) {
        break missingId;
      }

      id = R.id.lin_more;
      LinearLayout linMore = ViewBindings.findChildViewById(rootView, id);
      if (linMore == null) {
        break missingId;
      }

      id = R.id.name;
      TextView name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.rel_title;
      RelativeLayout relTitle = ViewBindings.findChildViewById(rootView, id);
      if (relTitle == null) {
        break missingId;
      }

      id = R.id.tv_delete;
      TextView tvDelete = ViewBindings.findChildViewById(rootView, id);
      if (tvDelete == null) {
        break missingId;
      }

      id = R.id.tv_title;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      id = R.id.tv_write_date;
      TextView tvWriteDate = ViewBindings.findChildViewById(rootView, id);
      if (tvWriteDate == null) {
        break missingId;
      }

      id = R.id.v_state;
      View vState = ViewBindings.findChildViewById(rootView, id);
      if (vState == null) {
        break missingId;
      }

      return new ItemCounselBinding((LinearLayout) rootView, ivMore, ivProfile, linCounsel, linMore,
          name, relTitle, tvDelete, tvTitle, tvWriteDate, vState);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
