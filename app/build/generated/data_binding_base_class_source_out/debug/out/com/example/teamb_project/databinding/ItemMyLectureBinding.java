// Generated by view binder compiler. Do not edit!
package com.example.teamb_project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.teamb_project.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemMyLectureBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView card;

  @NonNull
  public final ImageView ivSubject;

  @NonNull
  public final RelativeLayout relBackground;

  @NonNull
  public final TextView tvCnt;

  @NonNull
  public final TextView tvLectureTitle;

  @NonNull
  public final TextView tvRoom;

  @NonNull
  public final TextView tvTeacherName;

  private ItemMyLectureBinding(@NonNull LinearLayout rootView, @NonNull CardView card,
      @NonNull ImageView ivSubject, @NonNull RelativeLayout relBackground, @NonNull TextView tvCnt,
      @NonNull TextView tvLectureTitle, @NonNull TextView tvRoom, @NonNull TextView tvTeacherName) {
    this.rootView = rootView;
    this.card = card;
    this.ivSubject = ivSubject;
    this.relBackground = relBackground;
    this.tvCnt = tvCnt;
    this.tvLectureTitle = tvLectureTitle;
    this.tvRoom = tvRoom;
    this.tvTeacherName = tvTeacherName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemMyLectureBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemMyLectureBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_my_lecture, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemMyLectureBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card;
      CardView card = ViewBindings.findChildViewById(rootView, id);
      if (card == null) {
        break missingId;
      }

      id = R.id.iv_subject;
      ImageView ivSubject = ViewBindings.findChildViewById(rootView, id);
      if (ivSubject == null) {
        break missingId;
      }

      id = R.id.rel_background;
      RelativeLayout relBackground = ViewBindings.findChildViewById(rootView, id);
      if (relBackground == null) {
        break missingId;
      }

      id = R.id.tv_cnt;
      TextView tvCnt = ViewBindings.findChildViewById(rootView, id);
      if (tvCnt == null) {
        break missingId;
      }

      id = R.id.tv_lecture_title;
      TextView tvLectureTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvLectureTitle == null) {
        break missingId;
      }

      id = R.id.tv_room;
      TextView tvRoom = ViewBindings.findChildViewById(rootView, id);
      if (tvRoom == null) {
        break missingId;
      }

      id = R.id.tv_teacher_name;
      TextView tvTeacherName = ViewBindings.findChildViewById(rootView, id);
      if (tvTeacherName == null) {
        break missingId;
      }

      return new ItemMyLectureBinding((LinearLayout) rootView, card, ivSubject, relBackground,
          tvCnt, tvLectureTitle, tvRoom, tvTeacherName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
