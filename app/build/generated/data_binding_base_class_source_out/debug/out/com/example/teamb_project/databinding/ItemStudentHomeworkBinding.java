// Generated by view binder compiler. Do not edit!
package com.example.teamb_project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.teamb_project.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemStudentHomeworkBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final TextView tvHomeworkDuedate;

  @NonNull
  public final TextView tvHomeworkTitle;

  @NonNull
  public final TextView tvHomeworkWritedate;

  @NonNull
  public final TextView tvState;

  private ItemStudentHomeworkBinding(@NonNull MaterialCardView rootView,
      @NonNull TextView tvHomeworkDuedate, @NonNull TextView tvHomeworkTitle,
      @NonNull TextView tvHomeworkWritedate, @NonNull TextView tvState) {
    this.rootView = rootView;
    this.tvHomeworkDuedate = tvHomeworkDuedate;
    this.tvHomeworkTitle = tvHomeworkTitle;
    this.tvHomeworkWritedate = tvHomeworkWritedate;
    this.tvState = tvState;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemStudentHomeworkBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemStudentHomeworkBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_student_homework, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemStudentHomeworkBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tv_homework_duedate;
      TextView tvHomeworkDuedate = ViewBindings.findChildViewById(rootView, id);
      if (tvHomeworkDuedate == null) {
        break missingId;
      }

      id = R.id.tv_homework_title;
      TextView tvHomeworkTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvHomeworkTitle == null) {
        break missingId;
      }

      id = R.id.tv_homework_writedate;
      TextView tvHomeworkWritedate = ViewBindings.findChildViewById(rootView, id);
      if (tvHomeworkWritedate == null) {
        break missingId;
      }

      id = R.id.tv_state;
      TextView tvState = ViewBindings.findChildViewById(rootView, id);
      if (tvState == null) {
        break missingId;
      }

      return new ItemStudentHomeworkBinding((MaterialCardView) rootView, tvHomeworkDuedate,
          tvHomeworkTitle, tvHomeworkWritedate, tvState);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
