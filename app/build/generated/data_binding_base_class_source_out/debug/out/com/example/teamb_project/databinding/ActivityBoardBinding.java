// Generated by view binder compiler. Do not edit!
package com.example.teamb_project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.teamb_project.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityBoardBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialCardView cardGoTop;

  @NonNull
  public final EditText edtSearch;

  @NonNull
  public final ImageView ivBack;

  @NonNull
  public final ImageView ivSearch;

  @NonNull
  public final ImageView ivWrite;

  @NonNull
  public final LinearLayout linMore;

  @NonNull
  public final RecyclerView recvBoard;

  @NonNull
  public final NestedScrollView scrBoard;

  @NonNull
  public final Spinner spinner;

  private ActivityBoardBinding(@NonNull LinearLayout rootView, @NonNull MaterialCardView cardGoTop,
      @NonNull EditText edtSearch, @NonNull ImageView ivBack, @NonNull ImageView ivSearch,
      @NonNull ImageView ivWrite, @NonNull LinearLayout linMore, @NonNull RecyclerView recvBoard,
      @NonNull NestedScrollView scrBoard, @NonNull Spinner spinner) {
    this.rootView = rootView;
    this.cardGoTop = cardGoTop;
    this.edtSearch = edtSearch;
    this.ivBack = ivBack;
    this.ivSearch = ivSearch;
    this.ivWrite = ivWrite;
    this.linMore = linMore;
    this.recvBoard = recvBoard;
    this.scrBoard = scrBoard;
    this.spinner = spinner;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBoardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBoardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_board, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBoardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_go_top;
      MaterialCardView cardGoTop = ViewBindings.findChildViewById(rootView, id);
      if (cardGoTop == null) {
        break missingId;
      }

      id = R.id.edt_search;
      EditText edtSearch = ViewBindings.findChildViewById(rootView, id);
      if (edtSearch == null) {
        break missingId;
      }

      id = R.id.iv_back;
      ImageView ivBack = ViewBindings.findChildViewById(rootView, id);
      if (ivBack == null) {
        break missingId;
      }

      id = R.id.iv_search;
      ImageView ivSearch = ViewBindings.findChildViewById(rootView, id);
      if (ivSearch == null) {
        break missingId;
      }

      id = R.id.iv_write;
      ImageView ivWrite = ViewBindings.findChildViewById(rootView, id);
      if (ivWrite == null) {
        break missingId;
      }

      id = R.id.lin_more;
      LinearLayout linMore = ViewBindings.findChildViewById(rootView, id);
      if (linMore == null) {
        break missingId;
      }

      id = R.id.recv_board;
      RecyclerView recvBoard = ViewBindings.findChildViewById(rootView, id);
      if (recvBoard == null) {
        break missingId;
      }

      id = R.id.scr_board;
      NestedScrollView scrBoard = ViewBindings.findChildViewById(rootView, id);
      if (scrBoard == null) {
        break missingId;
      }

      id = R.id.spinner;
      Spinner spinner = ViewBindings.findChildViewById(rootView, id);
      if (spinner == null) {
        break missingId;
      }

      return new ActivityBoardBinding((LinearLayout) rootView, cardGoTop, edtSearch, ivBack,
          ivSearch, ivWrite, linMore, recvBoard, scrBoard, spinner);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
